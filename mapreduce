import java.io.IOException;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;

public class Filter {
	
	public static class FilterMapper extends Mapper<Object, Text, Object, Text> {

		@Override
		protected void map(Object key, Text value, Context context) throws IOException, InterruptedException {
		String filterValue = context.getConfiguration().get("filtervalue");

		if(value.toString().contains(filterValue))
			context.write(key, value);
	}
}

	public static void main(String[] args) throws Exception {
		
		Configuration conf = new Configuration();

		conf.set("filtervalue", args[2]);


		Job job = Job.getInstance(conf, "filter");
		
		job.setJarByClass(Filter.class);

		job.setMapperClass(FilterMapper.class);

		FileInputFormat.addInputPath(job, new Path(args[0]));
		FileOutputFormat.setOutputPath(job, new Path(args[1]));

		System.exit(job.waitForCompletion(true) ? 0 : 1);

	}
}
